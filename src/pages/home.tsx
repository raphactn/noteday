import { AddIcon, Search2Icon } from "@chakra-ui/icons";
import {
  Box,
  Button,
  Center,
  Select,
  Container,
  Flex,
  Input,
  InputGroup,
  InputLeftElement,
  SimpleGrid,
} from "@chakra-ui/react";
import { motion } from "framer-motion";
import Head from "next/head";
import { useEffect, useState } from "react";
import { CardNote } from "../Components/CardNote";
import { CreateNoteModal } from "../Components/CreateNoteModal";
import Nav from "../Components/Navbar";
import { auth, database } from "../services/firebase";
import { collection, query, where, onSnapshot } from "firebase/firestore";
import { colors } from "../utils/colors";

const Home = () => {
  const [notes, setNotes] = useState<Array<any>>([]);
  const [modalOpen, setModalOpen] = useState(false);
  const [search, setSearch] = useState("");
  const [color, setColor] = useState("");
  const currentUser = auth.currentUser;
  const databaseRef = collection(database, `notes/${currentUser?.uid}/data`);

  useEffect(() => {
    if (!currentUser?.uid) return;

    const filters: any[] = [];
    if (color) filters.push(where("color", "==", color));
    if (search)
      filters.push(
        where("title", ">=", search),
        where("title", "<=", search + "\uf8ff")
      );

    const q = query(databaseRef, ...filters);

    const unsubscribe = onSnapshot(q, (snapshot) => {
      setNotes(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })));
    });

    return () => unsubscribe();
  }, [currentUser, search, color]);

  return (
    <>
      <Box>
        <Head>
          <title>Home - Notes Day</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Nav notes={notes} />
        <Container maxW={"container.xl"} my={10}>
          <CreateNoteModal open={modalOpen} setOpen={setModalOpen} />
          <Flex
            justifyContent={"space-between"}
            gap={5}
            flexDirection={{ base: "column", md: "row" }}
          >
            <Box>
              <Button
                disabled={currentUser?.uid ? false : true}
                rightIcon={<AddIcon />}
                onClick={() => setModalOpen(!modalOpen)}
              >
                Nova Nota
              </Button>
            </Box>
            <Center gap={5}>
              <Box w={"100%"}>
                <Select
                  value={color}
                  onChange={(e) => setColor(e.target.value)}
                  placeholder={"Filtre por cor"}
                >
                  {colors.map((color, i) => (
                    <option key={i} value={color.color}>
                      {color.name}
                    </option>
                  ))}
                </Select>
              </Box>
              <InputGroup>
                <InputLeftElement
                  pointerEvents="none"
                  children={<Search2Icon />}
                />
                <Input
                  value={search}
                  onChange={(e) => setSearch(e.target.value)}
                  placeholder="Procure por Notas"
                />
              </InputGroup>
            </Center>
          </Flex>
          <SimpleGrid
            columns={{ base: 1, md: 2, lg: 3, xl: 4 }}
            spacing={5}
            my={10}
          >
            {notes?.map((note, i) => (
              <motion.div
                key={i}
                initial={{ opacity: 0, y: "2vw" }}
                animate={{ opacity: 1, y: "0px" }}
                transition={{ type: "spring", duration: 1, bounce: 0 }}
              >
                <Box>
                  <CardNote note={note} />
                </Box>
              </motion.div>
            ))}
          </SimpleGrid>
        </Container>
      </Box>
    </>
  );
};

export default Home;
